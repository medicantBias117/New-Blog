---
import Icon from "astro-icon";

// import Button from "./Button";

import BlogItem from "./BlogItem.astro";
import { getPosts } from "../../sanity/api";
import HomeArticleItem from "./HomeArticleItem.astro";
import HomeNoteItem from "./HomeNoteItem.astro";
interface Props {
  category?: string;
  limit?: string;
  pagination?: number;
  isSummary?: boolean;
  sortBy?: string;
  type?: string;
}

interface Post {
  userId: number;
  id: number;
  title: string;
  body: string;
}
const { category, limit, pagination, isSummary, sortBy, type } = Astro.props;

// const typess = type == "articles" ? "post" : type == "notes" ? "note" : "";

const data = await getPosts(type);
let tagsArray: any[] = [];
let countInArray: any[] = [];
if (type == "note") {
  let x = new Set(
    data
      .map((item) => {
        let x = item.notetags.map((tag) => tag.label);
        return x;
      })
      .flat(Infinity)
  );
  tagsArray = [...x];

  countInArray = tagsArray.map((tag) => {
    return data.filter((note) => {
      if (note.notetags.map((item) => item.label).includes(tag)) {
        return note;
      }
    }).length;
  });
}
---

{
  type && (
    <div class="breakout">
      <h1>
        Showing {sortBy + " "} {type == "post" ? "article" : type}s:
      </h1>
    </div>
  )
}
{
  type == "note" && (
    <div>
      <h4> Filter by: </h4>
      <div class="flex flex-row flex-wrap gap-x-4 ">
        {tagsArray.map((tag: string, index) => {
          let x = tag.toLowerCase().replace(" ", "-");
          return (
            <span class="w-fit">
              <a href={"/tag/" + x}>
                {" "}
                #{x} ({countInArray[index]}){" "}
              </a>
            </span>
          );
        })}
      </div>
    </div>
  )
}
<div class="grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8 mt-8">
  {
    data.map((post, index) =>
      type === "post" ? (
        <HomeArticleItem
          title={post.title}
          body={post.summary}
          date={post.publishedAt}
          imgURL={post.image}
          readingTime={post.readtime}
          type={post._type}
          index={index}
          slug={post.slug}
        />
      ) : (
        <HomeNoteItem
          title={post.title}
          body={post.summary}
          date={post.publishedAt}
          imgURL={post.image}
          readtime={post.readtime}
          type={post._type}
          index={index}
          slug={post.slug}
        />
      )
    )
  }
</div>
