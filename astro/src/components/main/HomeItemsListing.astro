---
import {
  getLatestNotesWithPagination,
  getLatestArticlesWithPagination,
} from "../../sanity/api";
import { sanityClient } from "sanity:client";
import PortableText from "../portableText/PortableText.astro";
import HomeArticleItem from "./HomeArticleItem.astro";
import HomeNoteItem from "./HomeNoteItem.astro";

interface Props {
  category?: string;
  limit?: string;
  pagination?: number;
  isSummary?: boolean;
  sortBy?: string;
  type?: string;
}

interface Post {
  userId: number;
  id: number;
  title: string;
  body: string;
}

interface siteSettings {
  navMenu: [
    {
      navLink: string;
      navTitle: string;
    },
  ];
  person: Object;
  title: string;
  url: string;
  introtext: Object;
}

const { category, limit, pagination, isSummary, sortBy, type } = Astro.props;

// const typess = type == "articles" ? "post" : type == "notes" ? "note" : "";

const postData = await getLatestArticlesWithPagination(10); //get the latest 10 posts
const noteData = await getLatestNotesWithPagination(10); // get the latest 10 notes

//check which is latest publication (either a new note or a new article)

const notesIsLatest = () => {
  const latestArticle = postData[0];
  const latestNote = noteData[0];
  if (latestArticle._createdAt > latestNote._createdAt) {
    return false;
  } else {
    return true;
  }
};

const siteSettings: siteSettings = await sanityClient.fetch(
  `*[_id == "siteSettings"][0]`
);
---

<div class="intro-block w-100 mt-4 lg:mt-8">
  <span class="text-3xl">ðŸ‘‹</span>
  <PortableText portableText={siteSettings.introtext} />
</div>

<div class="breakout mt-8 lg:mt-16">
  <div class="flex flex-row justify-start flex-grow items-center gap-8">
    <h2 class="w-fit min-w-fit p-0 italic">
      Latest {notesIsLatest() ? "Notes" : "Articles"}
    </h2>
    <div class="h-[1px] bg-[var(--accent-color)] w-full"></div>
    <span class="w-fit min-w-fit p-0">
      <a href={notesIsLatest() ? "/notes/" : "/articles/"}> View All</a>
    </span>
  </div>
  <div class="grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8 mt-8">
    {
      notesIsLatest()
        ? noteData.map((post, index) => (
            <HomeNoteItem
              title={post.title}
              body={post.summary}
              date={post._createdAt}
              imgURL={post.image}
              readtime={post.readtime}
              type={post._type}
              index={index}
              slug={post.slug}
            />
          ))
        : postData.map((post, index) => (
            <HomeArticleItem
              title={post.title}
              body={post.summary}
              date={post._createdAt}
              imgURL={post.image}
              readingTime={post.readtime}
              type={post._type}
              index={index}
              slug={post.slug}
            />
          ))
    }
  </div>
</div>
<div class="breakout mt-8 lg:mt-16">
  <div class="flex flex-row justify-start flex-grow items-center gap-8">
    <h2 class="w-fit min-w-fit p-0 italic">
      Latest {!notesIsLatest() ? "Notes" : "Articles"}
    </h2>
    <div class="h-[1px] bg-[var(--accent-color)] w-full"></div>
    <span class="w-fit min-w-fit p-0">
      <a href={!notesIsLatest() ? "/notes/" : "/articles/"}> View All</a>
    </span>
  </div>
  <div class="grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8 mt-8">
    {
      !notesIsLatest()
        ? noteData.map((post, index) => (
            <HomeNoteItem
              title={post.title}
              body={post.summary}
              date={post._createdAt}
              imgURL={post.image}
              readtime={post.readtime}
              type={post._type}
              index={index}
              slug={post.slug}
            />
          ))
        : postData.map((post, index) => (
            <HomeArticleItem
              title={post.title}
              body={post.summary}
              date={post._createdAt}
              imgURL={post.image}
              readingTime={post.readtime}
              type={post._type}
              index={index}
              slug={post.slug}
            />
          ))
    }
  </div>
</div>

<div></div>
