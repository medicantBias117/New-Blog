---
import { getImageObj } from "../../sanity/urlForImage";
import FormattedDate from "../FormattedDate.astro";
import { urlForImage } from "../../sanity/urlForImage";
interface Props {
  date: string;
  type: string;
  title: string;
  body: string;
  slug?: string;
  readingTime: string;
  imgURL: URL;
  index: number;
}

const { date, type, title, body, slug, readingTime, imgURL, index } =
  Astro.props;

const imgURLFromSanity = urlForImage(imgURL);
---

<a
  class="grid-item"
  href={type == "post" ? "/articles/" + slug : "/notes/" + slug}
>
  <div class="content-container h-full w-full">
    <h3>{title}</h3>
    <p class="line-clamp-5 not-italic article-body">{body}</p>
    <div class="mt-4 flex flex-row justify-between items-center">
      <span class="text-xs date">
        <FormattedDate date={date} display={true} />
      </span>
      <span class="text-xs reading-time"
        >{readingTime ? readingTime : 2} mins read</span
      >
    </div>
  </div>
  <div
    class="bg-image"
    style={`background-image: url(${imgURLFromSanity}); background-color: rgba(0,0,0,.5) `}
  >
  </div>
</a>
<style>
  a.grid-item {
    position: relative;
    aspect-ratio: 4/5;
  }

  .bg-image {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    bottom: 0;
    background-position: 50% 50%;
    z-index: 1;
  }
  .content-container {
    z-index: 10;
    position: relative;
    padding-top: 2rem;
    padding-bottom: 2rem;
    padding-inline: 1rem;
    background-color: rgba(0, 0, 0, 0.75);
    color: #fff;
    transition: background-color 400ms ease;
    overflow: hidden;
  }

  .content-container h3 {
    transform: translateY(100%);
    transition: transform 400ms ease;
  }

  .content-container .article-body {
    opacity: 0;
    transform: translateY(100%);
    transition:
      opacity,
      transform 400ms ease;
    transition-delay: 100ms;
  }

  .content-container .reading-time {
    opacity: 0;
    transform: translateX(100%);
    transition:
      opacity,
      transform 400ms ease;
    transition-delay: 150ms;
  }
  .content-container .date {
    opacity: 0;
    transform: translateX(-100%);
    transition:
      opacity,
      transform 400ms ease;
    transition-delay: 150ms;
  }

  .grid-item:hover .content-container {
    background-color: rgba(0, 0, 0, 0.884);
  }

  .grid-item:hover .content-container h3 {
    transform: translateY(0%);
  }

  .grid-item:hover .reading-time {
    opacity: 1;
    transform: translateX(0%);
  }
  .grid-item:hover .article-body {
    opacity: 1;
    transform: translateY(0%);
  }
  .grid-item:hover .date {
    opacity: 1;
    transform: translateX(0%);
  }

  @media (max-width: 1024px) {
    a.grid-item {
      aspect-ratio: auto;
    }
    .content-container .article-body {
      opacity: 1;
      transform: translateY(0%);
    }
    .content-container h3 {
      transform: translateY(0%);
      transition: transform 400ms ease;
    }
    .content-container .reading-time {
      opacity: 1;
      transform: translateX(0%);
    }
    .content-container .date {
      opacity: 1;
      transform: translateX(0%);
    }
  }
</style>
