---
import { getImageObj } from "../../sanity/urlForImage";
import FormattedDate from "../FormattedDate.astro";
interface Props {
  date: string;
  type: string;
  title: string;
  body: string;
  slug?: string;
  readingTime: string;
  imgURL: URL;
  index: number;
}

const { date, type, title, body, slug, readingTime, imgURL, index } =
  Astro.props;
---

<a
  class="grid-item"
  href={type == "post" ? "/articles/" + slug : "/notes/" + slug}
>
  <div class="blog-item flex flex-col flex-grow" style={"--i:" + index}>
    <div class="">
      <FormattedDate date={date} display={false} />
    </div>

    {
      imgURL && (
        <div class="w-full  mb-4 fill overflow-hidden image-container">
          <img
            class="min-w-fit p-0"
            loading="lazy"
            src={getImageObj(imgURL).width(400).height(250).fit("clip").url()}
            alt={title}
            width="100%"
          />
        </div>
      )
    }

    <h2 class="leading-6 p-0">
      {title}
    </h2>
    <p class="line-clamp-3 not-italic">{body}</p>

    <div class="mt-4 flex flex-row justify-start items-center">
      <span class="text-xs">{readingTime} mins read</span>
    </div>
    <div class="mt-2 read-more-icon flex flex-row justify-start gap-2">
      <span> Continue reading</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="var(--accent-color)"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3"></path>
      </svg>
    </div>
  </div>
</a>
<style>
  .grid-item {
  }

  .read-more-icon {
    transition: transform 400ms ease-in-out;
  }
  .blog-item:hover .read-more-icon,
  .read-more-icon:hover {
    transform: translateX(1.5rem);
  }
  svg,
  path {
    color: var(--text-color);
    /* OR */
    fill: var(--text-color);
  }

  @media (max-width: 768px) {
    .blog-item {
      opacity: 1;
    }
  }
</style>
